class Solution {
     long long ans=0L;
      int mod=1_000_000_007;
    Long dp[][];
    public int dfs(int n, int k, int t)
    {
           if(n<0||t<0) return 0;
        if(n==0&&t==0) return 1;
     
        if(dp[n][t]!=null) return (int)(dp[n][t]%mod);
        ans=0L;
        for(int i=1;i<=k;i++)
        {
            if(t-i>=0) 
            {
                ans=((ans%mod)+(dfs(n-1,k,t-i)%mod))%mod;
            }
        }
        dp[n][t]=(ans%mod);
        return (int)(dp[n][t]%1000000007);
        System.out.print("done");
    }
    public int numRollsToTarget(int n, int k, int target) {
      
        dp=new Long[n+1][target+1];
        dfs(n,k,target);
        return (int)(dp[n][target]%mod);
    }
}
